#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.8 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 57 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 36 36 140 255 255 255 -1
-1 0 42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 34 139 34 255 255 255 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1           0 420 0 28 3 23 #"#lang at-exp codespells"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 18 #"dev-runes/mod-info"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 78
(4
 #"; Note: SphereOverlapActors doesn't return all actors. (e.g. particl"
 #"e effects)"
) 0 0 24 29 1 #"\n"
0 0 17 3 89
(5
 #"; However, particle effects can be destroyed if they are childed to "
 #"a parent with a mesh."
) 0 0 24 29 1 #"\n"
0 0 17 3 49 #"; Or possibly any actor that \"generates overlaps\""
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; TODO: RESEARCH THIS"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"  var global = {};"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 13 #" var lastkey;"
0 0 17 29 1 #"\n"
0 0 17 3 54 #" class MyIH extends Root.ResolveClass(\"InputHelper\") {"
0 0 17 29 1 #"\n"
0 0 17 3 26 #"   HandleKeyPressed(key) {"
0 0 17 29 1 #"\n"
0 0 17 3 29 #"    console.log(key.KeyName);"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"   }"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"  } "
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 48 #"  let MyIH_C = require('uclass')()(global,MyIH);"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"  new "
0 0 17 3 15 #"MyIH_C(GWorld);"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 44 #"var control = GWorld.GetPlayerController(0);"
0 0 17 29 1 #"\n"
0 0 17 3 31 #"  var pi = control.PlayerInput;"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 25 #"pi.SetBinds(\"P\", \"cmd..\")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"function tick(){"
0 0 17 29 1 #"\n"
0 0 17 3 46 #"  var control = GWorld.GetPlayerController(0);"
0 0 17 29 1 #"\n"
0 0 17 3 34 #"  var ic = control.InputComponent;"
0 0 17 29 1 #"\n"
0 0 17 3 34 #"  console.log(control.IsInputKeyDo"
0 0 17 3 16 #"wn(Key.C(\"P\")));"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"  console.log(control.IsInputKeyDown(Key.C(\"p\")));"
0 0 17 29 1 #"\n"
0 0 17 3 25 #"  process.nextTick(tick);"
0 0 17 29 1 #"\n"
0 0 17 3 2 #" }"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 19 #"define-classic-rune"
0 0 24 3 2 #" ("
0 0 14 3 12 #"on-key-press"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 12 #"#:background"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 12 #"#:foreground"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"unreal-js"
0 0 24 3 2 #" @"
0 0 14 3 2 #"~a"
0 0 24 3 1 #"{"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 11 #"(function()"
0 0 24 3 1 #"{"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 20 3 52 #"class MyIH extends Root.ResolveClass(\"InputHelper\") "
0 0 24 3 1 #"{"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 20 3 22 #"HandleKeyPressed(key) "
0 0 24 3 1 #"{"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 20 3 16 #"console.log(key)"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   }"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  }"
0 0 20 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 20 3 46 #"let MyIH_C = require('uclass')()(global,MyIH);"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 20 3 19 #"new MyIH_C(GWorld);"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  }"
0 0 20 3 3 #")()"
0 0 24 3 3 #"}))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 19 #"define-classic-rune"
0 0 24 3 2 #" ("
0 0 14 3 14 #"destroy-actors"
0 0 24 3 2 #" ["
0 0 14 3 6 #"radius"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 12 #"#:background"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 12 #"#:foreground"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"unreal-js"
0 0 24 3 2 #" @"
0 0 14 3 2 #"~a"
0 0 24 3 1 #"{"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 11 #"(function()"
0 0 24 3 1 #"{"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 20 3 61
#"var actors = KismetSystemLibrary.SphereOverlapActors(GWorld, "
0 0 24 3 1 #"{"
0 0 20 3 2 #"X:"
0 0 24 3 2 #"@("
0 0 14 3 9 #"current-x"
0 0 24 3 1 #")"
0 0 20 3 4 #", Y:"
0 0 24 3 2 #"@("
0 0 14 3 9 #"current-z"
0 0 24 3 1 #")"
0 0 20 3 4 #", Z:"
0 0 24 3 2 #"@("
0 0 14 3 9 #"current-y"
0 0 24 3 2 #")}"
0 0 20 3 2 #", "
0 0 24 3 1 #"@"
0 0 14 3 6 #"radius"
0 0 20 3 11 #").OutActors"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 20 3 25 #"var destroy = function(a)"
0 0 24 3 1 #"{"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 20 3 44 #"a.GetAttachedActors().OutActors.map(destroy)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 20 3 41 #"a.DestroyActor()                         "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   }"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 20 3 29 #"actors.map(destroy)          "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  }"
0 0 20 3 3 #")()"
0 0 24 29 1 #"\n"
0 0 24 3 4 #" }))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 19 #"define-classic-rune"
0 0 24 3 2 #" ("
0 0 14 3 10 #"spawn-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 12 #"#:background"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 12 #"#:foreground"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"unreal-js"
0 0 24 3 2 #" @"
0 0 14 3 2 #"~a"
0 0 24 3 1 #"{"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 20 3 11 #"(function()"
0 0 24 3 1 #"{"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 20 3 53 #"const uclass = require('uclass')().bind(this,global);"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 20 3 36 #"class MySMA extends StaticMeshActor "
0 0 24 3 1 #"{"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 20 3 7 #"ctor() "
0 0 24 3 1 #"{"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 20 3 88
(6
 #"this.StaticMeshComponent.SetStaticMesh(StaticMesh.Load('/Engine/Basi"
 #"cShapes/Cube.Cube'))"
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"   }"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  }"
0 0 20 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 20 3 28 #"let MySMA_C = uclass(MySMA);"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 20 3 19 #"new MySMA_C(GWorld,"
0 0 24 3 1 #"{"
0 0 20 3 2 #"X:"
0 0 24 3 2 #"@("
0 0 14 3 9 #"current-x"
0 0 24 3 1 #")"
0 0 20 3 4 #", Y:"
0 0 24 3 2 #"@("
0 0 14 3 9 #"current-z"
0 0 24 3 1 #")"
0 0 20 3 4 #", Z:"
0 0 24 3 2 #"@("
0 0 14 3 9 #"current-y"
0 0 24 3 2 #")}"
0 0 20 3 2 #");"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    }"
0 0 20 3 3 #")()"
0 0 24 3 3 #"}))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 19 #"define-classic-rune"
0 0 24 3 2 #" ("
0 0 14 3 12 #"open-browser"
0 0 24 3 1 #" "
0 0 14 3 3 #"url"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 12 #"#:background"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 12 #"#:foreground"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"unreal-js"
0 0 24 3 2 #" @"
0 0 14 3 2 #"~a"
0 0 24 3 1 #"{"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 20 3 11 #"(function()"
0 0 24 3 1 #"{"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 20 3 88
(7
 #"var widget = GWorld.CreateWidget(WB_TextSpellcrafting_C, GWorld.GetP"
 #"layerController(0));"
) 0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 20 3 36 #"widget.WebBrowser_309.InitialURL = \""
0 0 24 3 1 #"@"
0 0 14 3 3 #"url"
0 0 20 3 2 #"\";"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 20 3 23 #"widget.AddToViewport();"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  }"
0 0 20 3 3 #")()"
0 0 24 3 3 #"}))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 24 #"define-classic-rune-lang"
0 0 24 3 1 #" "
0 0 14 3 11 #"my-mod-lang"
0 0 24 3 1 #" "
0 0 23 3 11 #"#:eval-from"
0 0 24 3 1 #" "
0 0 14 3 8 #"main.rkt"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"destroy-actors"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 10 #"spawn-cube"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 12 #"open-browser"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 12 #"on-key-press"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"main"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 20 #"codespells-workspace"
0 0 24 3 1 #" "
0 0 17 3 55 #";TODO: Change this to your local workspace if different"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"build-path"
0 0 24 3 2 #" ("
0 0 14 3 17 #"current-directory"
0 0 24 3 2 #") "
0 0 19 3 4 #"\"..\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"..\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 16 #"once-upon-a-time"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 23 3 7 #"#:world"
0 0 24 3 2 #" ("
0 0 14 3 15 #"log-cabin-world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 23 3 8 #"#:aether"
0 0 24 3 2 #" ("
0 0 14 3 11 #"demo-aether"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 23 3 6 #"#:lang"
0 0 24 3 2 #" ("
0 0 14 3 11 #"my-mod-lang"
0 0 24 3 1 #" "
0 0 23 3 19 #"#:with-paren-runes?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
